openapi: 3.0.0
info:
  version: 0.0.1
  title: Anki Clone Application API
  description: API for managing our Anki app
paths:
  /api/user:
    get:
      summary: Get all users
      operationId: getUser
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Internal Server Error
    post:
      summary: Create a new user
      operationId: createUser
      tags:
        - Users
      requestBody:
        description: The user to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
        '409':
          description: Conflict
        '500':
          description: Internal Server Error
  /api/user/{id}:
    get:
      summary: Get a user by id
      operationId: getUserById
      tags:
        - Users
      parameters:
        - name: id
          in: path
          description: The id of the user
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    put:
      summary: Update a user by id
      operationId: updateUserById
      tags:
        - Users
      parameters:
        - name: id
          in: path
          description: The id of the user
          required: true
          schema:
            type: number
      requestBody:
        description: The user to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '204':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not Found
        '409':
          description: Conflict
        '500':
          description: Internal Server Error
  /api/user/{id}/deactivate:
    put:
      summary: Deactivate a user by id
      operationId: deactivateUserById
      tags:
        - Users
      parameters:
        - name: id
          in: path
          description: The id of the user
          required: true
          schema:
            type: number
      responses:
        '204':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error

  /api/package:
    get:
      summary: Get all learning packages
      operationId: getLearningPackage
      tags:
        - Learning Packages
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningPackage'
        '500':
          description: Internal Server Error
    post:
      summary: Create a new learning package
      operationId: createLearningPackage
      tags:
        - Learning Packages
      requestBody:
        description: The learning package to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LearningPackage'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearningPackage'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /api/package/{id}:
    get:
      summary: Get a learning package by id
      operationId: getLearningPackageById
      tags:
        - Learning Packages
      parameters:
        - name: id
          in: path
          description: The id of the learning package
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearningPackage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    put:
      summary: Update a learning package by id
      operationId: updateLearningPackageById
      tags:
        - Learning Packages
      parameters:
        - name: id
          in: path
          description: The id of the learning package
          required: true
          schema:
            type: number
      requestBody:
        description: The learning package to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LearningPackage'
      responses:
        '204':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearningPackage'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /api/package/{id}/fact:
    get:
      summary: Get all learning facts by learning package id
      operationId: getLearningFactByLearningPackageId
      tags:
        - Learning Packages
      parameters:
        - name: id
          in: path
          description: The id of the learning package
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningFact'
        '500':
          description: Internal Server Error
    post:
      summary: Create a new learning fact associated to a learning package
      operationId: createLearningFact
      tags:
        - Learning Packages
      parameters:
        - name: id
          in: path
          description: The id of the learning package
          required: true
          schema:
            type: number
      requestBody:
        description: The learning fact to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LearningFact'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearningFact'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /api/package/summary:
    get:
      summary: Get all learning packages summaries and return only id and title
      operationId: getLearningPackageSummary
      tags:
        - Learning Packages
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningPackageSummary'
        '500':
          description: Internal Server Error
  /api/package/search:
    get:
      summary: Get all learning packages by title, description or category
      operationId: getLearningPackageByTitleDescriptionOrCategory
      tags:
        - Learning Packages
      parameters:
        - name: title
          in: query
          description: The title of the learning package
          required: false
          schema:
            type: string
        - name: description
          in: query
          description: The description of the learning package
          required: false
          schema:
            type: string
        - name: category
          in: query
          description: The category of the learning package
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningPackage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error

  /api/fact:
    get:
      summary: Get all learning facts
      operationId: getLearningFact
      tags:
        - Learning Facts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningFact'
        '500':
          description: Internal Server Error
  /api/fact/{id}:
    get:
      summary: Get a learning fact by id
      operationId: getLearningFactById
      tags:
        - Learning Facts
      parameters:
        - name: id
          in: path
          description: The id of the learning fact
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearningFact'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    put:
      summary: Update a learning fact by id
      operationId: updateLearningFactById
      tags:
        - Learning Facts
      parameters:
        - name: id
          in: path
          description: The id of the learning fact
          required: true
          schema:
            type: number
      requestBody:
        description: The learning fact to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LearningFact'
      responses:
        '204':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearningFact'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /api/fact/{id}/deactivate:
    put:
      summary: Deactivate a learning fact by id
      operationId: deactivateLearningFactById
      tags:
        - Learning Facts
      parameters:
        - name: id
          in: path
          description: The id of the learning fact
          required: true
          schema:
            type: number
      responses:
        '204':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearningFact'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error

servers:
  [
    {
      url: http://localhost:3000,
      description: Development server
    }
  ]
components:
  schemas:
    User:
      type: object
      properties:
        userId:
          type: number
          description: The id of the user
          example: 1
        mail:
          type: string
          description: The mail of the user
          example: john.doe@gmail.com
        pseudo:
          type: string
          description: The pseudo of the user
          example: John
        password:
          type: string
          description: The password of the user
          example: 123456
        registrationDate:
          type: string
          description: The registration date of the user
          example: 2021-01-01
        profilePicture:
          type: string
          description: The profile picture of the user
          example: https://www.google.com/
        isActive:
          type: boolean
          description: The status of the user
          example: true
      required:
        - userId
        - mail
        - pseudo
        - password
        - registrationDate
        - isActive
    LearningPackage:
      type: object
      properties:
        packageId:
          type: number
          description: The id of the learning package
          example: 1
        title:
          type: string
          description: The title of the learning package
          example: Learn TypeScript
        description:
          type: string
          description: The description of the learning package
          example: A comprehensive guide to understanding TypeScript, a statically typed superset of JavaScript.
        category:
          type: string
          description: The category of the learning package
          example: Programming Language
        targetAudience:
          type: string
          description: The target audience of the learning package
          example: Developers familiar with JavaScript
        duration:
          type: number
          description: The duration of the learning package in hours
          example: 2
        creationDate:
          type: string
          description: The creation date of the learning package
          example: 2021-01-01
        creatorId:
          type: number
          description: The id of the creator of the learning package
          example: 1
      required:
        - packageId
        - title
        - creationDate
        - creatorId
    LearningPackageSummary:
      type: object
      properties:
        id:
          type: number
          description: The id of the learning package
          example: 1
        title:
          type: string
          description: The title of the learning package
          example: Learn TypeScript
      required:
        - id
        - title
    LearningFact:
      type: object
      properties:
        factId:
          type: number
          description: The id of the learning fact
          example: 1
        front:
          type: string
          description: The front of the learning fact
          example: What is TypeScript?
        back:
          type: string
          description: The back of the learning fact
          example: TypeScript is a statically typed superset of JavaScript.
        source:
          type: string
          description: The source of the learning fact
          example: https://www.google.com/
        relatedImage:
          type: string
          description: The related image of the learning fact
          example: https://www.google.com/
        relatedLink:
          type: string
          description: The related link of the learning fact
          example: https://www.google.com/
        isActive:
          type: boolean
          description: The status of the learning fact
          example: true
        packageId:
          type: number
          description: The id of the learning package
          example: 1
        creatorId:
          type: number
          description: The id of the creator of the learning fact
          example: 1
      required:
        - factId
        - front
        - back
        - source
        - isActive
        - packageId
        - creatorId